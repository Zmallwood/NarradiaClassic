#pragma once
#include "../../core.gui/model/scene_gui.h"
namespace Narradia
{
   ////////////////////////////////////////////////////////////////////////////////
   /// @brief Model for IScene.
   ////////////////////////////////////////////////////////////////////////////////
   class IScene {
     public:
      ////////////////////////////////////////////////////////////////////////////////
      /// @brief Create scene gui.
      ////////////////////////////////////////////////////////////////////////////////
      IScene()
          : scene_gui_(std::make_shared<SceneGui>()) {
      }

      ////////////////////////////////////////////////////////////////////////////////
      /// @brief Update game logic for scenes deriving from this class.
      ////////////////////////////////////////////////////////////////////////////////
      void UpdateGameLogic();

      auto scene_gui() {
         return scene_gui_;
      }

     protected:
      ////////////////////////////////////////////////////////////////////////////////
      /// @brief Game logic update specifically for derived scenes.
      ////////////////////////////////////////////////////////////////////////////////
      virtual void UpdateGameLogicDerived() = 0;

      std::shared_ptr<SceneGui> scene_gui_;
   };
}
