#pragma once
#include "command/file_utilities.h"
#include "command/load_single_image.h"
#include <map>
namespace Narradia
{
   ////////////////////////////////////////////////////////////////////////////////
   /// @brief Loads, holds and provides images from image folder on file system.
   ////////////////////////////////////////////////////////////////////////////////
   class ImageBank : public Singleton<ImageBank> {
     public:
      ////////////////////////////////////////////////////////////////////////////////
      /// @brief Load images on first use.
      ////////////////////////////////////////////////////////////////////////////////
      ImageBank();

      ////////////////////////////////////////////////////////////////////////////////
      /// @brief Cleanup on class disposal.
      ////////////////////////////////////////////////////////////////////////////////
      ~ImageBank();

      ////////////////////////////////////////////////////////////////////////////////
      /// @brief Returns the GLuint ID corresponding to the provided image name.
      ///
      /// @param[in] img_name Image name for which to get the ID.
      /// @return GLuint ID for the image.
      ////////////////////////////////////////////////////////////////////////////////
      auto GetImage(std::string_view img_name) -> GLuint;

      ////////////////////////////////////////////////////////////////////////////////
      /// @brief Creates blank GL texture to render text on.
      ///
      /// @param[in] unique_img_name Unique name for which to access the new texture later.
      ////////////////////////////////////////////////////////////////////////////////
      auto CreateBlankTextImage(std::string unique_img_name) -> void;

     private:
      ////////////////////////////////////////////////////////////////////////////////
      /// @brief Loads all images in images path, creatin GL texture and storing their ids and
      /// GLuints.
      ////////////////////////////////////////////////////////////////////////////////
      auto LoadImages() -> void;

      const std::string_view kRelImagesPath = "Resources/Images/";
      std::map<std::string, GLuint> images_;
   };
}
